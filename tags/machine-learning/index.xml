<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Machine Learning on </title>
    <link>//yjc.me/tags/machine-learning/</link>
    <description>Recent content in Machine Learning on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <copyright>Jianchao Yang</copyright>
    <lastBuildDate>Thu, 03 Oct 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="//yjc.me/tags/machine-learning/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Zita - All-in-one Image Classification Solution</title>
      <link>//yjc.me/portfolio/zita/</link>
      <pubDate>Thu, 03 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>//yjc.me/portfolio/zita/</guid>
      <description>Zita is an all-in-one machine learning solution for building production-ready image classification services. It covers the full life cycle of creating a simple image classifier.
You can consider it an open source alternative to Amazon SageMaker for image classification.
Features  An easy-to-use image labelling tool for creating ground truth Out-of-the-box Jupyter notebooks and CLI commands to efficiently train and tune modern deep learning image classifiers. High-performance RPC and web API to test, evaluate and serve predictions.</description>
    </item>
    
    <item>
      <title>Supervised Text Classification for Fine-grained Sentiment Analysis</title>
      <link>//yjc.me/portfolio/fine-grained-sentiment-analysis/</link>
      <pubDate>Sun, 09 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>//yjc.me/portfolio/fine-grained-sentiment-analysis/</guid>
      <description>In response to an AI Competition calling participants to predict sentiment labels for a massive online reviews dataset, I built this repository to test various supervised text classification methods in the context of fine-grained sentiment analysis.
I evaluated the prediction performance, training speed and ease-of-use of more than 6 text feature extraction methods and 9 base classifiers, with the help of scikit-learn&amp;rsquo;s pipeline API. The methods used include TF-IDF, Word2Vec, biLM word embeddings, SVM, Linear Discriminant Analysis, Logistic Regression with Regularization, and Neutral Networks.</description>
    </item>
    
  </channel>
</rss>